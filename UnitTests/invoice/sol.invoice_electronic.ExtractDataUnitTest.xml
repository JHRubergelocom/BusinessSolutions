<ruleset>
  <base>
    <name>sol.invoice_electronic.ExtractDataUnitTest</name>
    <search>
      <name>"TREEWALK"</name>
      <value>"ARCPATH[(E10E1000-E100-E100-E100-E10E10E10E00)]:/Business Solutions/invoice_electronic/Test"</value>
      <mask>(E10E1000-E100-E100-E100-E10E10E10E30)</mask>
      <max>200</max>
    </search>
    <interval>0H</interval>
    <includes>
      <name>ix: IndexServer Functions</name>
      <name>fu: File Utils</name>
      <name>lib_Class</name>
      <name>lib_handlebars</name>
      <name>lib_moment</name>
      <name>lib_sol.common.Cache</name>
      <name>lib_sol.common.Config</name>
      <name>lib_sol.common.DateUtils</name>
      <name>lib_sol.common.IxUtils</name>
      <name>lib_sol.common.UserUtils</name>
      <name>lib_sol.common.ObjectUtils</name>
      <name>lib_sol.common.ObjectFormatter</name>
      <name>lib_sol.common.StringUtils</name>
      <name>lib_sol.common.ExceptionUtils</name>
      <name>lib_sol.common.FileUtils</name>
      <name>lib_sol.common.SordUtils</name>
      <name>lib_sol.common.RepoUtils</name>
      <name>lib_sol.common.XmlUtils</name>
      <name>lib_sol.common.as.Utils</name>
      <name>lib_sol.common.as.FunctionBase</name>
      <name>lib_sol.connector_xml.Utils</name>
      <name>lib_sol.connector_xml.Converter</name>
      <name>lib_sol.connector_xml.Importer</name>
      <name>lib_sol.invoice_electronic.as.postProcessing.XRechnung</name>
      <name>lib_sol.invoice_electronic.as.postProcessing.Zugferd</name>
      <name>lib_sol.invoice_electronic.as.functions.ExtractData</name>
      <name>lib_sol.invoice_electronic.as.ExtractDataTest</name>
    </includes>
  </base>
<rule>
  <name>Regel1</name>
  <condition></condition>
  <script>if (EM_TREE_STATE == 1) {
    sol.invoice_electronic.as.ExtractDataTest.processSord(EM_ACT_SORD);
}

</script>
</rule>
<rule>
  <name>Global Error Rule</name>
  <condition>OnError</condition>
  <script>sol.common.ExceptionUtils.logAsException(EM_ERROR);
</script>
</rule>
</ruleset>
