<ruleset>
  <base>
    <name>sol.contract.as.functions.CreateCashflowReportBackground</name>
    <search>
      <name>"DIRECT"</name>
      <value>"1"</value>
      <mask>0</mask>
      <max>200</max>
    </search>
    <interval>0H</interval>
    <includes>
      <name>lib_Class</name>
      <name>lib_handlebars</name>
      <name>lib_moment</name>
      <name>lib_sol.common.Cache</name>
      <name>lib_sol.common.Config</name>
      <name>lib_sol.common.IxUtils</name>
      <name>lib_sol.common.WfUtils</name>
      <name>lib_sol.common.JsonUtils</name>
      <name>lib_sol.common.CounterUtils</name>
      <name>lib_sol.common.StringUtils</name>
      <name>lib_sol.common.ObjectUtils</name>
      <name>lib_sol.common.DateUtils</name>
      <name>lib_sol.common.RepoUtils</name>
      <name>lib_sol.common.Template</name>
      <name>lib_sol.common.SordUtils</name>
      <name>lib_sol.common.UserUtils</name>
      <name>lib_sol.common.ExceptionUtils</name>
      <name>lib_sol.common.AclUtils</name>
      <name>lib_sol.common.AsyncUtils</name>
      <name>lib_sol.common.FileUtils</name>
      <name>lib_sol.common.TranslateTerms</name>
      <name>lib_sol.common.ObjectFormatter</name>
      <name>lib_sol.common.as.DocumentGenerator</name>
      <name>lib_sol.common.as.FunctionBase</name>
      <name>lib_sol.common.as.Utils</name>
      <name>lib_sol.common.as.BarcodeUtils</name>
      <name>lib_sol.common.as.renderer.Fop</name>
      <name>lib_sol.common.as.renderer.Excel</name>
      <name>lib_sol.common.as.Office</name>
      <name>lib_sol.contract.as.functions.CreateCashflowReportBackground</name>
    </includes>
  </base>
<rule>
  <name>GenerateCashflowReport</name>
  <condition></condition>
  <script>
    sol.common.as.Utils.requiresUserSession(this);
    
    var params = JSON.parse(EM_PARAM2);
    params.user = EM_USERID;
    var report = sol.create("sol.contract.as.functions.CreateCashflowReportBackground", params);
    report.process();
    
    sol.common.as.Utils.cleanupUserSession(this);
</script>
</rule>
<rule>
  <name>Global Error Rule</name>
  <condition>OnError</condition>
  <script></script>
</rule>
</ruleset>
